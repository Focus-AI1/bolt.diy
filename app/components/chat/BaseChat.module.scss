.BaseChat {
  &[data-chat-visible='false'] {
    --workbench-inner-width: 100%;
    --workbench-left: 0;

    .Chat {
      --at-apply: bolt-ease-cubic-bezier;
      transition-property: transform, opacity;
      transition-duration: 0.3s;
      will-change: transform, opacity;
      transform: translateX(-50%);
      opacity: 0;
    }
  }
  
  height: calc(100vh - var(--header-height) - 1px); /* Added 1px buffer */
  overflow-x: hidden; /* Prevent horizontal scrollbar */
  position: relative;
  max-width: 100vw; /* Ensure no horizontal overflow */
  box-sizing: border-box; /* Include padding in width calculation */
  
  /* Remove any overflow-y here to prevent the main scrollbar */
  overflow-y: hidden;
}

.Chat {
  opacity: 1;
  max-width: 100%; /* Ensure no horizontal overflow */
  overflow-x: hidden; /* Prevent horizontal scrollbar */
  
  /* Only enable vertical scrolling within the chat component itself */
  height: 100%;
  display: flex;
  flex-direction: column;
  
  /* The chat content should scroll, not the entire chat container */
  & > .chatContent {
    overflow-y: auto;
    overflow-x: hidden; /* Explicitly prevent horizontal scrolling */
    flex: 1;
    
    /* This ensures the scrollbar appears next to the content */
    width: 100%;
    max-width: var(--chat-min-width, 800px);
    margin: 0 auto;
  }
}

/* Ensure the root container also prevents horizontal overflow */
:global(#root) {
  overflow-x: hidden;
  max-width: 100vw;
}

/* Ensure the html and body don't allow horizontal overflow */
:global(html), :global(body) {
  overflow-x: hidden;
  max-width: 100vw;
}

/* Additional rule to prevent horizontal scrolling in StickToBottom */
:global(.StickToBottom__container) {
  overflow-x: hidden !important;
  max-width: 100%;
}

/* Ensure all flex containers don't cause horizontal overflow */
:global(.flex), :global(.flex-col), :global(.flex-row) {
  max-width: 100%;
  overflow-x: hidden;
}

.PromptEffectContainer {
  --prompt-container-offset: 50px;
  --prompt-line-stroke-width: 1px;
  position: absolute;
  pointer-events: none;
  inset: calc(var(--prompt-container-offset) / -2);
  width: calc(100% + var(--prompt-container-offset));
  height: calc(100% + var(--prompt-container-offset));
}

.PromptEffectLine {
  width: calc(100% - var(--prompt-container-offset) + var(--prompt-line-stroke-width));
  height: calc(100% - var(--prompt-container-offset) + var(--prompt-line-stroke-width));
  x: calc(var(--prompt-container-offset) / 2 - var(--prompt-line-stroke-width) / 2);
  y: calc(var(--prompt-container-offset) / 2 - var(--prompt-line-stroke-width) / 2);
  rx: calc(8px - var(--prompt-line-stroke-width));
  fill: transparent;
  stroke-width: var(--prompt-line-stroke-width);
  stroke: url(#line-gradient);
  stroke-dasharray: 35px 65px;
  stroke-dashoffset: 10;
}

.PromptShine {
  fill: url(#shine-gradient);
  mix-blend-mode: overlay;
}

/* Fix any specific container issues */
:global(.flex-1.overflow-y-auto) {
  overflow-x: hidden !important;
}

/* Ensure messages container doesn't overflow */
:global(.Messages_container) {
  max-width: 100%;
  overflow-x: hidden;
}

/* Ensure any scrollable containers only scroll vertically */
:global(.overflow-y-auto), :global(.overflow-auto) {
  overflow-x: hidden;
}

/* Fix container for sticky elements that might be overflowing */
:global(.StickToBottom__container) {
  overflow-x: hidden;
  max-width: 100%;
}

/* Fix any chat container wrappers */
:global(.chatContainer) {
  overflow-x: hidden;
  max-width: 100%;
}

/* Add these rules to the end of your BaseChat.module.scss file */

/* Target header and navigation components */
:global(.HeaderContainer),
:global(header),
:global(nav),
:global(.header) {
  overflow: hidden !important;
}

/* Target any fixed position elements that might be causing scrollbars */
:global([class*="fixed"]),
:global([class*="sticky"]),
:global([class*="absolute"]) {
  overflow: visible;
  max-width: 100vw;
}

/* Ensure all containers have proper overflow handling */
:global(div) {
  scrollbar-width: thin;
}

/* Hide very small scrollbars that might appear in corners */
:global(*::-webkit-scrollbar) {
  width: 8px;
  height: 8px;
}

:global(*::-webkit-scrollbar-thumb) {
  background-color: rgba(0, 0, 0, 0.2);
  border-radius: 4px;
}

:global(*::-webkit-scrollbar-track) {
  background: transparent;
}

/* Fix for small scrollbars in corners */
:global(*::-webkit-scrollbar-corner) {
  background: transparent;
}